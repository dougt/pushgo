// Automatically generated by MockGen. DO NOT EDIT!
// Source: src/github.com/mozilla-services/pushgo/simplepush/worker.go

package simplepush

import (
	gomock "github.com/rafrombrc/gomock/gomock"
)

// Mock of Worker interface
type MockWorker struct {
	ctrl     *gomock.Controller
	recorder *_MockWorkerRecorder
}

// Recorder for MockWorker (not exported)
type _MockWorkerRecorder struct {
	mock *MockWorker
}

func NewMockWorker(ctrl *gomock.Controller) *MockWorker {
	mock := &MockWorker{ctrl: ctrl}
	mock.recorder = &_MockWorkerRecorder{mock}
	return mock
}

func (_m *MockWorker) EXPECT() *_MockWorkerRecorder {
	return _m.recorder
}

func (_m *MockWorker) Run(_param0 *PushWS) {
	_m.ctrl.Call(_m, "Run", _param0)
}

func (_mr *_MockWorkerRecorder) Run(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Run", arg0)
}

func (_m *MockWorker) Flush(_param0 *PushWS, _param1 int64, _param2 string, _param3 int64, _param4 string) error {
	ret := _m.ctrl.Call(_m, "Flush", _param0, _param1, _param2, _param3, _param4)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerRecorder) Flush(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Flush", arg0, arg1, arg2, arg3, arg4)
}
